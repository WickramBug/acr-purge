# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
    - repository: MyGitHubRepo
      type: github
      endpoint: WickramBug
      name: WickramBug/acr-purge
      ref: main

jobs:
  - job: LockACRImage
    displayName: "Lock prod ACR image"
    steps:
      - checkout: MyGitHubRepo
        persistCredentials: true
      - template: ./test.yaml
      - task: CmdLine@2
        inputs:
          script: |
            git -C $(Build.SourcesDirectory)/ config user.email "wickram95@gmail.com"
            git -C $(Build.SourcesDirectory)/ config user.name "WickramBug"
            git -C $(Build.SourcesDirectory)/ checkout main
            git -C $(Build.SourcesDirectory)/ pull origin main
            git -C $(Build.SourcesDirectory)/ add $(Build.SourcesDirectory)/acr-pord-image-tags.txt
            git -C $(Build.SourcesDirectory)/ commit -m "[Prod] Update state file via pipeline for the latest build - $(Build.SourceBranchName)"
            git -C $(Build.SourcesDirectory)/ push origin main
            echo "[Prod] State file update is completed!"
        displayName: "Push updated state file to Repo"
  - job: SendingAlert
    displayName: "Sending Google chat alert"
    dependsOn:
      - LockACRImage
    condition: eq(dependencies.LockACRImage.result, 'Failed')
    steps:
      - template: "alerts/send-alert-acr-prod-image-lock.yaml"
        parameters:
          PIPELINE_NAME: "Asgardeo ACR Image Lock"
          ENVIRONMENT: "PROD"
          PIPELINE_STATUS: "Failed"
          GOOGLE_CHAT_SPACE: "AAAA-y5RxXY"
          GOOGLE_CHAT_KEY: "AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI"
          GOOGLE_CHAT_TOKEN: "n678xyeVxt1ZXmw052hT_4pgJIm1BNSNE-iYDf0AgZY%3D"
